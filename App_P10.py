# Import des librairies Python
import numpy as np
import pandas as pd
import os
# Import des librairies pour Streamlit
import streamlit as st
from PIL import Image # Import d'image

# El√©ments de titre
st.subheader("Projet 10 : D√©tection de faux billets üíµ")
st.subheader("Application finale")
image = Image.open('Logo.jpg')
st.image(image, caption='Logo ONCFM')


## Section 1 : importer les donn√©es d'entrainement

# Titre
st.subheader("Donn√©es d'entrainement")

# Cr√©ation de 2 onglets dans la section
tab1, tab2 = st.tabs(["X", "Y"])

# Informations de la 1√®re section
# Import du fichier √† analyser (CSV)
uploaded_xtrain = tab1.file_uploader("D√©poser les donn√©es d'entrainement (X)")
if uploaded_xtrain is not None:
    X_train = pd.read_csv(uploaded_xtrain)
    tab1.success("Donn√©es charg√©es X !")
else:
    tab1.warning("Aucun fichier d√©pos√© pour les donn√©es d'entrainements (X)")

# Informations de la 2nde section
# Import du fichier √† analyser (CSV)
uploaded_ytrain = tab2.file_uploader("D√©poser les donn√©es d'entrainement (Y)")
if uploaded_ytrain is not None:
    y_train = pd.read_csv(uploaded_ytrain)
    tab2.success("Donn√©es charg√©es y !")
else:
    tab2.warning("Aucun fichier d√©pos√© pour les donn√©es d'entrainements (Y)")


## Section 2 : importer les nouvelles donn√©es

# Titre
st.subheader("Nouvelles donn√©es √† analyser")

# Import du fichier √† analyser (CSV)
uploaded_file = st.file_uploader("D√©poser les donn√©es √† analyser")
if uploaded_file is not None:
    dataframe = pd.read_csv(uploaded_file)
    st.success("Donn√©es √† analyser charg√©es !")
else:
    st.warning("Aucun fichier d√©pos√© pour les nouvelles donn√©es")

    
## Section 3 : Pr√©paration des donn√©es

# Cr√©ation dataframe pour les pr√©dictions sans la colonne ID
New_billets_predict= dataframe.drop("id", axis=1)
# Enregistrement des ID dans un dataframe
ID = dataframe["id"]


## Section 4 : Entra√Ænement du mod√®le
from sklearn.linear_model import LogisticRegression
# On choisit "LogisticRegression"
model_lrg = LogisticRegression()
# Entra√Ænement du mod√®le sur les donn√©es
model_lrg.fit(uploaded_xtrain, uploaded_ytrain)

